doctype html
html
  head
    link(rel="stylesheet", href="/css/semantic.min.css")
    link(rel="stylesheet", href="/css/highlight/maki.css")
    link(rel="stylesheet", href="/css/maki.css")
    link(rel="stylesheet", href="//fonts.googleapis.com/css?family=Source+Sans+Pro:400,700|Open+Sans:300italic,400,300,700")

    script(src="/js/jquery.js")
    script(src="/js/semantic.min.js")

    style.
      .main.container {
        padding-top: 2em;
      }
      
      cite.right.floated {
        display: block;
        text-align: right;
      }

  body
    //- We can use Maki's built-in UI framework, Semantic UI, to cleanly style
    //- some basic content.  Documentation: https://semantic-ui.com
    //-
    //- Note that we're using CSS-like syntax to build the interface in HTML.
    .ui.main.text.container
      .ui.huge.segment
        blockquote “If you want to build a ship, don’t drum up the men to gather wood, divide the work, and give orders. Instead, teach them to yearn for the vast and endless sea.”
          br
          cite.right.floated — Antoine de Saint-Exupéry

      .ui.very.padded.segment
        h2.ui.header Welcome home, friend.
        p Here are some of the things you've told me are important to you.

      .ui.fluid.card
        .content
          i.right.floated.refresh.icon(on-tap="refreshChart")
          h3.header Active Users
          .description
            canvas.online.users(src="/people", filter="{ status: 'active' }")

    script(src="/assets/chart.bundle.min.js")
    script.
      // You can find the server for this endpoint here:
      //
      //    https://github.com/martindale/soundtracker
      //
      // We wrote it to learn more about what time of day people were listening
      // to soundtrack, so that we could all commit to being online around the
      // same times.  Eventually, we hope for this service to be provided by a
      // generalized statistics server, such as #sensemaker might provide.
      
      /*/var ENDPOINT = 'http://localhost:13010/snapshots';/*/
      var ENDPOINT = 'https://stats.soundtrack.io/snapshots';/**/
      var chart = {};
      
      drawChart();
      
      $(document).on('click', '[on-tap=refreshChart]', refreshChart);
      
      setInterval(refreshChart, 60 * 1000);
      
      function refreshChart() {
        $(this).addClass('loading');
        drawChart();
      }
      
      function drawChart() {
        $.getJSON(ENDPOINT, function(snapshots) {
          console.log('snapshots:', snapshots);
          
          var items = snapshots.map(function(x) {
            return x.metrics.listeners;
          });
          
          var labels = [];
          
          for (var i = 0; i < items.length; i++) {
            var label = (i + 1) + ' minutes ago';
            labels.push(label);
          }

          var data = {
            labels: labels.reverse(),
            datasets: [
              {
                label: 'soundtrack.io',
                data: items,
              }
            ]
          };
          
          var context = document.querySelector('canvas.online.users');
          chart = new Chart(context, {
            type: 'line',
            data: data
          });
          
          $('[on-tap=refreshChart]').removeClass('loading');
          
        });
      }
